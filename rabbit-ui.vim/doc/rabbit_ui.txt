*rabbit-ui.txt*	       Rich UI Vim script Library

Author : rbtnn <naru123456789@gmail.com>
LICENSE: MIT license (see LICENSE.txt)

==============================================================================
This is a rich UI Vim script Library.

rabbit-ui-collection.vim contains commands using rabbit-ui.vim. 
>
    https://github.com/rbtnn/rabbit-ui-collection.vim
<
==============================================================================
CONTENTS					           *rabbit-ui-contents*

Components              |rabbit-ui-components|
    MessageBox          |rabbit-ui-components-messagebox| 
    Panel               |rabbit-ui-components-panel| 
    Choices             |rabbit-ui-components-choices| 
    GridView            |rabbit-ui-components-gridview| 
Config                  |rabbit-ui-context-config|
KeyMap                  |rabbit-ui-context-config-keymap|
SampleCodes             |rabbit-ui-samplecodes|

==============================================================================
Components                                               *rabbit-ui-components*

------------------------------------------------------------------------------
MessageBox                                    *rabbit-ui-components-messagebox* 

* rabbit_ui#messagebox({title}, {text} [, {config}])

  KeyMap:

    * common.quit_window              (default key: `q`)
      Returns `{}`.

    * common.enter                    (default key: `<cr>`)
      Returns `{ 'value' : [] }`.



    * common.focus_next_window        (default key: `<space>`)

------------------------------------------------------------------------------
Choices                                          *rabbit-ui-components-choices* 

* rabbit_ui#choices({title}, {items} [, {config}])

  KeyMap:

    * common.quit_window              (default key: `q`)
      Returns `{}`.

    * common.enter                    (default key: `<cr>`)
      Returns `{ 'value' : (selected index) }`.



    * common.focus_next_window        (default key: `<space>`)
    * choices.cursor_up               (default key: `k` )
    * choices.cursor_down             (default key: `j` )
    * choices.cursor_to_first_item    (default key: `g` )
    * choices.cursor_to_last_item     (default key: `G` )

------------------------------------------------------------------------------
Panel                                              *rabbit-ui-components-panel* 

* rabbit_ui#panel({title_and_items_list} [, {config}])

  KeyMap:

    * common.quit_window              (default key: `q`)
      Returns `{}`.

    * common.enter                    (default key: `<cr>`)
      Returns `{ 'value' : [[(selected index), [(items)]], ...] }`.



    * common.focus_next_window        (default key: `<space>`)
    * panel.cursor_up                 (default key: `k` )
    * panel.cursor_down               (default key: `j` )
    * panel.cursor_left               (default key: `h` )
    * panel.cursor_right              (default key: `l` )
    * panel.cursor_to_first_item      (default key: `g` )
    * panel.cursor_to_last_item       (default key: `G` )
    * panel.move_item_to_left         (default key: `H` )
    * panel.move_item_to_right        (default key: `L` )

------------------------------------------------------------------------------
GridView                                        *rabbit-ui-components-gridview*

* rabbit_ui#gridview({data} [, {config}])

  KeyMap:

    * common.quit_window              (default key: `q` )
      Returns `{}`.

    * common.enter                    (default key: `<cr>` )
      Returns `{ 'value' : [[(edited cell), ...], ...] }`.



    * common.focus_next_window        (default key: `<space>`)
    * gridview.cursor_up              (default key: `k` )
    * gridview.cursor_down            (default key: `j` )
    * gridview.cursor_left            (default key: `h` )
    * gridview.cursor_right           (default key: `l` )
    * gridview.edit_cell              (default key: `e` )
      
==============================================================================
Config                                               *rabbit-ui-context-config*

{config} of Component is a dictionary. It can have following keys.


* box_top
  Top of a component. See Figure A.
  (Default: `&lines / 4 * 1`)


* box_bottom
  Bottom of a component. See Figure A.
  (Default: `&lines / 4 * 3`)


* box_left
  Left of a component. See Figure A.
  (Default: `&columns / 4 * 1`)


* box_right
  Right of a component. See Figure A.
  (Default: `&columns / 4 * 3`)


                     box_left    box_right
                         |           |
                         v           v
                     +-----------------------------------+
                     |                                   |
                     |                                   |
                     |  +-------------+                  |
    box_top ->       |  | ___________ |                  |
                     |  |             |                  |
                     |  |             |                  |
    box_bottom ->    |  |             |                  |
                     |  +-------------+                  |
                     |                                   |
                     +-----------------------------------+
                                Figure A


* gridview.display_col_size
  This can be had on GridView only.
  Columns size displayed.
  (Default: `5`)


* gridview.percentage_of_width 
  This can be had on GridView only.
  Percentages of component-width splited by display_col_size.
>
  component-width = box_right - box_left + 1
<
  The sum of elements should be 100.


* gridview.display_row_size
  This can be had on GridView only.
  Row size displayed if the type is Number.
  (Default: `5`)


==============================================================================
KeyMap                                        *rabbit-ui-context-config-keymap*



* common.quit_window
  Quit a window.


* common.enter
  Select an item under cursor.


* common.focus_next_window
  Focus to a next window.


* messagebox
  No keymap.


* choices.cursor_up
  Cursor up.


* choices.cursor_down
  Cursor down.


* choices.cursor_to_first_item
  Move cursor to first item.


* choices.cursor_to_last_item
  Move cursor to last item.

* panel.cursor_up
  Cursor up.


* panel.cursor_down
  Cursor down.


* panel.cursor_left
  Move cursor to left panel.


* panel.cursor_right
  Move cursor to right panel.


* panel.cursor_to_first_item
  Move cursor to first item.


* panel.cursor_to_last_item
  Move cursor to last item.


* panel.move_item_to_left
  Move selected item to left panel.


* panel.move_item_to_right
  Move selected item to right panel.


* gridview.cursor_up
  Cursor up.


* gridview.cursor_down
  Cursor down.


* gridview.cursor_left
  Cursor left.


* gridview.cursor_right
  Cursor right.


* gridview.edit_cell
  Edit a cell.


==============================================================================
SampleCodes                                             *rabbit-ui-samplecodes*

Example of MessageBox:
>
  let keymap = rabbit_ui#keymap#get()
  call rabbit_ui#messagebox('title','text text ...', {
      \   'box_top' : 0,
      \   'box_bottom' : 20,
      \   'box_right' : 25,
      \   'box_left' : 0,
      \   'keymap' : {
      \     char2nr('Q') : keymap.quit_window.
      \     char2nr("\<tab>") : keymap.focus_next_window.
      \   },
      \ })
<

Example of Choices:
>
  let keymap = rabbit_ui#components#choices#get_default_keymap()
  let keymap[char2nr("\<esc>")] = keymap[char2nr('q')]
  call rabbit_ui#choices('hoge', [1,2,3], {
      \   'box_top' : 0,
      \   'box_bottom' : 20,
      \   'box_right' : 25,
      \   'box_left' : 0,
      \   'keymap' : keymap,
      \ })
<

Example of Panel:
>
  call rabbit_ui#panel(
        \ [
        \   ['hoge',["A","B",'C','D']],
        \   ['foo',["1","2",'3','4']]
        \ ]
        \ )
<

Example of Panel:
>
  call rabbit_ui#gridview([[1,2,3],[4,5,6]])
<

Example of User Defined KeyEvent:
>
  function! g:CalcCells(...)
    let context_list = (a:1)['context_list']
    let active_window_context = context_list['active_window_index']
    if active_window_context['component_name'] is# 'gridview'
      let data = active_window_context['config']['data']
      for row in data
        if 2 < len(row)
          let row[2] = str2nr(row[0]) * str2nr(row[1])
        endif
      endfor
    endif
  endfunction
  let s:keymap = rabbit_ui#components#gridview#get_default_keymap()
  let s:keymap[char2nr('a')] = function('g:CalcCells')
  call rabbit_ui#gridview([[1,2,3],[4,5,6]], {
  \  'keymap' : s:keymap
  \ })
<

Example of MessageBox And Panel:
>
  call rabbit_ui#exec_components([
        \   { 'component_name' : 'messagebox',
        \     'arguments' : ['titleA', 'text'],
        \     'config' : {
        \       'box_top' :    10, 'box_left' :  21,
        \       'box_bottom' : 20, 'box_right' : 48,
        \     },
        \   },
        \   { 'component_name' : 'panel',
        \     'arguments' : [
        \       [
        \         ['hoge',["A","B",'C','D']],
        \         ['foo',["1","2",'3','4']]
        \       ]
        \     ],
        \     'config' : {
        \       'box_top' :    10, 'box_left' :  58,
        \       'box_bottom' : 25, 'box_right' : 110,
        \     },
        \   },
        \ ])
<

Example of GridView And Choices:
>
  call rabbit_ui#exec_components([
        \   { 'component_name' : 'gridview',
        \     'arguments' : [[[1,2,3],[4,5,6]]],
        \     'config' : {
        \       'box_top' :    21, 'box_left' :  21,
        \       'box_bottom' : 25, 'box_right' : 52,
        \     },
        \   },
        \   { 'component_name' : 'choices',
        \     'arguments' : ['choices',["A","B",'C','D']],
        \     'config' : {
        \       'box_top' :    10, 'box_left' :  10,
        \       'box_bottom' : 25, 'box_right' : 20,
        \     },
        \   },
        \ ])
<

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
